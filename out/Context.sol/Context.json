{
  "abi": [],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/oz-custom/contracts/oz/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":oz-custom/=node_modules/oz-custom/\"]},\"sources\":{\"node_modules/oz-custom/contracts/oz/utils/Context.sol\":{\"keccak256\":\"0x9a926fa07b0ddd374404ea567c3ec13ba0239559e9343366d8de352f475a7f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://453d160e042dfa2d1c5b664cf4b9ccf32a4d021644caa1c561c6fe7f5cb2cd47\",\"dweb:/ipfs/QmSVHa6uefNhtDkfQQdbKxFNNm7fVQ72eDeRPBmTsFSbyH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":oz-custom/=node_modules/oz-custom/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "node_modules/oz-custom/contracts/oz/utils/Context.sol": "Context"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/oz-custom/contracts/oz/utils/Context.sol": {
        "keccak256": "0x9a926fa07b0ddd374404ea567c3ec13ba0239559e9343366d8de352f475a7f2a",
        "urls": [
          "bzz-raw://453d160e042dfa2d1c5b664cf4b9ccf32a4d021644caa1c561c6fe7f5cb2cd47",
          "dweb:/ipfs/QmSVHa6uefNhtDkfQQdbKxFNNm7fVQ72eDeRPBmTsFSbyH"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/oz-custom/contracts/oz/utils/Context.sol",
    "id": 9836,
    "exportedSymbols": {
      "Context": [
        9835
      ]
    },
    "nodeType": "SourceUnit",
    "src": "86:759:64",
    "nodes": [
      {
        "id": 9815,
        "nodeType": "PragmaDirective",
        "src": "86:24:64",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 9835,
        "nodeType": "ContractDefinition",
        "src": "609:235:64",
        "nodes": [
          {
            "id": 9825,
            "nodeType": "FunctionDefinition",
            "src": "641:96:64",
            "nodes": [],
            "body": {
              "id": 9824,
              "nodeType": "Block",
              "src": "703:34:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 9821,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "720:3:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 9822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "724:6:64",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "720:10:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9820,
                  "id": 9823,
                  "nodeType": "Return",
                  "src": "713:17:64"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "650:10:64",
            "parameters": {
              "id": 9817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "660:2:64"
            },
            "returnParameters": {
              "id": 9820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9825,
                  "src": "694:7:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "694:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "693:9:64"
            },
            "scope": 9835,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 9834,
            "nodeType": "FunctionDefinition",
            "src": "743:99:64",
            "nodes": [],
            "body": {
              "id": 9833,
              "nodeType": "Block",
              "src": "810:32:64",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 9830,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "827:3:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 9831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "831:4:64",
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "827:8:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 9829,
                  "id": 9832,
                  "nodeType": "Return",
                  "src": "820:15:64"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "752:8:64",
            "parameters": {
              "id": 9826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "760:2:64"
            },
            "returnParameters": {
              "id": 9829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9834,
                  "src": "794:14:64",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9827,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:5:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "793:16:64"
            },
            "scope": 9835,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9816,
          "nodeType": "StructuredDocumentation",
          "src": "112:496:64",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9835
        ],
        "name": "Context",
        "nameLocation": "627:7:64",
        "scope": 9836,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 64
}