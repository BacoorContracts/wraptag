{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC20Permit__Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20__Expired",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20__InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ERC20__StringTooLong",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Signable__InvalidSignature",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account_",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "136:245:4:-:0;;;176:97;;;;;;;;;;1777:56:31;;;;;;;;;;;;;-1:-1:-1;;;1777:56:31;;;1819:5;365:111:19;;;;;;;;;;;;;-1:-1:-1;;;365:111:19;;;453:5;460:8;1469:399:29;;;;;;;;;;;;;-1:-1:-1;;;1469:399:29;;;;;;;;;;;;;;;;-1:-1:-1;;;1469:399:29;;;227:2:4;1620::29;1602:7;1596:21;:26;:54;;;;1648:2;1632:5;1626:19;:24;1596:54;1592:101;;;1671:22;;-1:-1:-1;;;1671:22:29;;;;;;;;;;;1592:101;1704:4;:12;1711:5;1704:4;:12;:::i;:::-;-1:-1:-1;1726:6:29;:16;1735:7;1726:6;:16;:::i;:::-;-1:-1:-1;1841:20:29;;;;-1:-1:-1;;2542:22:39;;;;;;;;;;2598:25;;;;;;;;;2858;;;;2893:31;;;;2953:13;2934:32;;2782:66;3003:104;2782:66;2542:22;2598:25;3904:191;;;;;;2994:25:43;;;3035:18;;;3028:34;;;3078:18;;;3071:34;;;4029:13:39;3121:18:43;;;3114:34;4072:4:39;3164:19:43;;;3157:61;3839:7:39;;2966:19:43;;3904:191:39;;;;;;;;;;;;3877:232;;;;;;3858:251;;3699:417;;;;;;3003:104;2976:131;;3140:4;3117:28;;3155:21;;-1:-1:-1;136:245:4;;-1:-1:-1;;;;;;136:245:4;14:127:43;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:43;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:43;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:43;;;2580:26;2531:89;-1:-1:-1;;1335:1:43;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:43;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:43;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:43;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:43:o;2735:489::-;136:245:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c806340c10f191161008c57806395d89b411161006657806395d89b41146101ee578063a9059cbb146101f6578063d505accf14610209578063dd62ed3e1461021c57600080fd5b806340c10f191461019057806370a08231146101a55780637ecebe00146101db57600080fd5b806323b872dd116100bd57806323b872dd1461013c578063313ce5671461014f5780633644e5151461018857600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610262565b6040516100f9919061099a565b60405180910390f35b610115610110366004610a2f565b6102f0565b60405190151581526020016100f9565b61012e60025481565b6040519081526020016100f9565b61011561014a366004610a59565b610369565b6101767f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100f9565b61012e610420565b6101a361019e366004610a2f565b61042f565b005b61012e6101b3366004610a95565b73ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b61012e6101e9366004610a95565b610471565b6100ec610485565b610115610204366004610a2f565b610492565b6101a3610217366004610ab7565b61051d565b61012e61022a366004610b2a565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205490565b6000805461026f90610b5d565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610b5d565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b505050505081565b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083528184208690559051858152929392909183917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a360019150505b92915050565b600073ffffffffffffffffffffffffffffffffffffffff841661038d81338561063d565b600081815260036020526040812080548592906103ab908490610bdf565b909155505073ffffffffffffffffffffffffffffffffffffffff848116600081815260036020908152604091829020805488019055905186815291928816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b600061042a6106a9565b905090565b61046d8261045e7f0000000000000000000000000000000000000000000000000000000000000000600a610d12565b6104689084610d21565b6107dd565b5050565b600081815260056020526040812054610363565b6001805461026f90610b5d565b336000818152600360205260408120805491929184919084906104b6908490610bdf565b909155505073ffffffffffffffffffffffffffffffffffffffff848116600081815260036020908152604091829020805488019055905186815291928416917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610355565b83421115610557576040517f614fe41d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610600877f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981898961059d83600090815260056020526040902080546001810190915590565b60408051602081019690965273ffffffffffffffffffffffffffffffffffffffff94851690860152929091166060840152608083015260a082015260c0810187905260e00160405160208183030381529060405280519060200120858585610858565b5050505073ffffffffffffffffffffffffffffffffffffffff92831660009081526004602090815260408083209490951682529290925291902055565b60008381526004602090815260408083208584529091529020547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106a3576106888282610bdf565b60008581526004602090815260408083208784529091529020555b50505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561070f57507f000000000000000000000000000000000000000000000000000000000000000046145b1561073957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b80600260008282546107ef9190610d38565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600360209081526040808320805486019055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050565b8473ffffffffffffffffffffffffffffffffffffffff1661087b858585856108cf565b73ffffffffffffffffffffffffffffffffffffffff16146108c8576040517ff1787e4500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b60006108e88484846108e0896108f1565b929190610939565b95945050505050565b60006103636108fe6106a9565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000604051846020527f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831161098f57856000528360405282606052602060406080600060015afa5060006060523d6060035191505b604052949350505050565b600060208083528351808285015260005b818110156109c7578581018301518582016040015282016109ab565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610a2a57600080fd5b919050565b60008060408385031215610a4257600080fd5b610a4b83610a06565b946020939093013593505050565b600080600060608486031215610a6e57600080fd5b610a7784610a06565b9250610a8560208501610a06565b9150604084013590509250925092565b600060208284031215610aa757600080fd5b610ab082610a06565b9392505050565b600080600080600080600060e0888a031215610ad257600080fd5b610adb88610a06565b9650610ae960208901610a06565b95506040880135945060608801359350608088013560ff81168114610b0d57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610b3d57600080fd5b610b4683610a06565b9150610b5460208401610a06565b90509250929050565b600181811c90821680610b7157607f821691505b602082108103610baa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181038181111561036357610363610bb0565b600181815b80851115610c4b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610c3157610c31610bb0565b80851615610c3e57918102915b93841c9390800290610bf7565b509250929050565b600082610c6257506001610363565b81610c6f57506000610363565b8160018114610c855760028114610c8f57610cab565b6001915050610363565b60ff841115610ca057610ca0610bb0565b50506001821b610363565b5060208310610133831016604e8410600b8410161715610cce575081810a610363565b610cd88383610bf2565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610d0a57610d0a610bb0565b029392505050565b6000610ab060ff841683610c53565b808202811582820484141761036357610363610bb0565b8082018082111561036357610363610bb056fea164736f6c6343000811000a",
    "sourceMap": "136:245:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:18:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2056:329;;;;;;:::i;:::-;;:::i;:::-;;;1251:14:43;;1244:22;1226:41;;1214:2;1199:18;2056:329:29;1086:187:43;1126:26:29;;;;;;;;;1424:25:43;;;1412:2;1397:18;1126:26:29;1278:177:43;2967:647:29;;;;;;:::i;:::-;;:::i;905:31::-;;;;;;;;1965:4:43;1953:17;;;1935:36;;1923:2;1908:18;905:31:29;1793:184:43;2794:173:31;;;:::i;279:100:4:-;;;;;;:::i;:::-;;:::i;:::-;;3620:174:29;;;;;;:::i;:::-;3761:23;;3720:7;3750:37;;;:10;:37;;;;;;;3620:174;2973:184:31;;;;;;:::i;:::-;;:::i;878:20:29:-;;;:::i;2391:570::-;;;;;;:::i;:::-;;:::i;1894:721:31:-;;;;;;:::i;:::-;;:::i;3800:214:29:-;;;;;;:::i;:::-;3956:21;;;;3915:7;3945:35;;;:10;:35;;;;;;;;3981:23;;;;3945:62;;;;;;;;;3800:214;853:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2056:329::-;720:10:36;2154:4:29;2213:36;;;:10;:36;;;;;;;;2224:22;2263:23;;2213:85;;;;;;;;;:94;;;2323:33;;1424:25:43;;;2154:4:29;;720:10:36;2263:23:29;;720:10:36;;2323:33:29;;1397:18:43;2323:33:29;;;;;;;;2374:4;2367:11;;;2056:329;;;;;:::o;2967:647::-;3085:4;3166:20;;;3198:62;3166:20;720:10:36;3253:6:29;3198:15;:62::i;:::-;3271:17;;;;:10;:17;;;;;:27;;3292:6;;3271:17;:27;;3292:6;;3271:27;:::i;:::-;;;;-1:-1:-1;;3455:18:29;;;;3444:32;;;;:10;:32;;;;;;;;;:42;;;;;;3512:26;;1424:25:43;;;3455:18:29;;3512:26;;;;;1397:18:43;3512:26:29;;;;;;;-1:-1:-1;3603:4:29;;2967:647;-1:-1:-1;;;;2967:647:29:o;2794:173:31:-;2910:7;2940:20;:18;:20::i;:::-;2933:27;;2794:173;:::o;279:100:4:-;340:32;346:2;359:12;363:8;359:2;:12;:::i;:::-;350:21;;:6;:21;:::i;:::-;340:5;:32::i;:::-;279:100;;:::o;2973:184:31:-;3095:7;2064:21:19;;;2111:12;2105:4;2098:26;2168:4;2152:21;;2146:28;3125:25:31;1916:274:19;878:20:29;;;;;;;:::i;2391:570::-;720:10:36;2485:4:29;2594:36;;;:10;:36;;;;;:46;;2485:4;;720:10:36;2634:6:29;;2594:36;2485:4;;2594:46;;2634:6;;2594:46;:::i;:::-;;;;-1:-1:-1;;2797:18:29;;;;2786:32;;;;:10;:32;;;;;;;;;:42;;;;;;2854:28;;1424:25:43;;;2797:18:29;;2854:28;;;;;1397:18:43;2854:28:29;1278:177:43;1894:721:31;2124:8;2106:15;:26;2102:61;;;2141:22;;;;;;;;;;;;;;2102:61;2174:353;2195:5;1114:66;2195:5;2338:7;2367:5;2394:16;2195:5;1665:13:19;1717:22;;;1765:12;1759:4;1752:26;1818:4;1802:21;;1845:10;;1891:1;1880:13;;1868:26;;;1845:10;1578:332;2394:16:31;2241:217;;;;;;6045:25:43;;;;6089:42;6167:15;;;6147:18;;;6140:43;6219:15;;;;6199:18;;;6192:43;6251:18;;;6244:34;6294:19;;;6287:35;6338:19;;;6331:35;;;6017:19;;2241:217:31;;;;;;;;;;;;2214:258;;;;;;2486:1;2501;2516;2174:7;:353::i;:::-;-1:-1:-1;;;;2549:21:31;;;;2538:35;;;;:10;:35;;;;;;;;2574:23;;;;2538:62;;;;;;;;;:70;1894:721::o;4207:320:29:-;4340:15;4358:18;;;:10;:18;;;;;;;;:28;;;;;;;;;4447:11;4436:22;;4432:88;;4503:17;4513:7;4503;:17;:::i;:::-;4472:18;;;;:10;:18;;;;;;;;:28;;;;;;;;:48;4432:88;4330:197;4207:320;;;:::o;3269:424:39:-;3322:7;3366:4;3358:29;3375:12;3358:29;;:66;;;;;3408:16;3391:13;:33;3358:66;3341:346;;;-1:-1:-1;3456:24:39;;3269:424::o;3341:346::-;-1:-1:-1;3904:191:39;;;3577:10;3904:191;;;;6766:25:43;;;;3609:12:39;6807:18:43;;;6800:34;3643:15:39;6850:18:43;;;6843:34;4029:13:39;6893:18:43;;;6886:34;4072:4:39;6936:19:43;;;;6929:84;;;;3904:191:39;;;;;;;;;;6738:19:43;;;;3904:191:39;;;3877:232;;;;;;2794:173:31:o;4786:452:29:-;4925:6;4910:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;5088:18:29;;;5077:32;;;;:10;:32;;;;;;;;:42;;;;;;5145:32;;1424:25:43;;;5145:32:29;;;;;;;;;;;;;279:100:4;;:::o;864:275:19:-;1074:9;1034:49;;:36;1049:11;1062:1;1065;1068;1034:14;:36::i;:::-;:49;;;1030:102;;1104:28;;;;;;;;;;;;;;1030:102;864:275;;;;;:::o;1356:216::-;1493:7;1519:46;1557:1;1560;1563;1519:29;1536:11;1519:16;:29::i;:::-;:37;:46;;:37;:46::i;:::-;1512:53;1356:216;-1:-1:-1;;;;;1356:216:19:o;4741:201:39:-;4850:7;4880:55;4902:20;:18;:20::i;:::-;4924:10;4042:2:38;4036:9;4107:66;4059:128;;4236:1;4224:14;;4217:39;;;;4310:2;4298:15;;4291:35;4414:2;4396:21;;;3812:621;358:1360;481:14;622:4;616:11;653:1;647:4;640:15;800:66;797:1;794:73;784:842;;900:4;894;887:18;935:1;929:4;922:15;967:1;961:4;954:15;1325:4;1275;1227;1178;1121;1047:5;1011:359;986:402;1460:1;1454:4;1447:15;1594:16;1588:4;1584:27;1578:34;1568:44;;784:842;1694:4;1687:15;358:1360;;-1:-1:-1;;;;358:1360:38:o;14:607:43:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;612:2;542:66;537:2;529:6;525:15;521:88;510:9;506:104;502:113;494:121;;;;14:607;;;;:::o;626:196::-;694:20;;754:42;743:54;;733:65;;723:93;;812:1;809;802:12;723:93;626:196;;;:::o;827:254::-;895:6;903;956:2;944:9;935:7;931:23;927:32;924:52;;;972:1;969;962:12;924:52;995:29;1014:9;995:29;:::i;:::-;985:39;1071:2;1056:18;;;;1043:32;;-1:-1:-1;;;827:254:43:o;1460:328::-;1537:6;1545;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;;1693:38;1727:2;1716:9;1712:18;1693:38;:::i;:::-;1683:48;;1778:2;1767:9;1763:18;1750:32;1740:42;;1460:328;;;;;:::o;2164:186::-;2223:6;2276:2;2264:9;2255:7;2251:23;2247:32;2244:52;;;2292:1;2289;2282:12;2244:52;2315:29;2334:9;2315:29;:::i;:::-;2305:39;2164:186;-1:-1:-1;;;2164:186:43:o;2355:693::-;2466:6;2474;2482;2490;2498;2506;2514;2567:3;2555:9;2546:7;2542:23;2538:33;2535:53;;;2584:1;2581;2574:12;2535:53;2607:29;2626:9;2607:29;:::i;:::-;2597:39;;2655:38;2689:2;2678:9;2674:18;2655:38;:::i;:::-;2645:48;;2740:2;2729:9;2725:18;2712:32;2702:42;;2791:2;2780:9;2776:18;2763:32;2753:42;;2845:3;2834:9;2830:19;2817:33;2890:4;2883:5;2879:16;2872:5;2869:27;2859:55;;2910:1;2907;2900:12;2859:55;2355:693;;;;-1:-1:-1;2355:693:43;;;;2933:5;2985:3;2970:19;;2957:33;;-1:-1:-1;3037:3:43;3022:19;;;3009:33;;2355:693;-1:-1:-1;;2355:693:43:o;3053:260::-;3121:6;3129;3182:2;3170:9;3161:7;3157:23;3153:32;3150:52;;;3198:1;3195;3188:12;3150:52;3221:29;3240:9;3221:29;:::i;:::-;3211:39;;3269:38;3303:2;3292:9;3288:18;3269:38;:::i;:::-;3259:48;;3053:260;;;;;:::o;3318:437::-;3397:1;3393:12;;;;3440;;;3461:61;;3515:4;3507:6;3503:17;3493:27;;3461:61;3568:2;3560:6;3557:14;3537:18;3534:38;3531:218;;3605:77;3602:1;3595:88;3706:4;3703:1;3696:15;3734:4;3731:1;3724:15;3531:218;;3318:437;;;:::o;3760:184::-;3812:77;3809:1;3802:88;3909:4;3906:1;3899:15;3933:4;3930:1;3923:15;3949:128;4016:9;;;4037:11;;;4034:37;;;4051:18;;:::i;4082:482::-;4171:1;4214:5;4171:1;4228:330;4249:7;4239:8;4236:21;4228:330;;;4368:4;4300:66;4296:77;4290:4;4287:87;4284:113;;;4377:18;;:::i;:::-;4427:7;4417:8;4413:22;4410:55;;;4447:16;;;;4410:55;4526:22;;;;4486:15;;;;4228:330;;;4232:3;4082:482;;;;;:::o;4569:866::-;4618:5;4648:8;4638:80;;-1:-1:-1;4689:1:43;4703:5;;4638:80;4737:4;4727:76;;-1:-1:-1;4774:1:43;4788:5;;4727:76;4819:4;4837:1;4832:59;;;;4905:1;4900:130;;;;4812:218;;4832:59;4862:1;4853:10;;4876:5;;;4900:130;4937:3;4927:8;4924:17;4921:43;;;4944:18;;:::i;:::-;-1:-1:-1;;5000:1:43;4986:16;;5015:5;;4812:218;;5114:2;5104:8;5101:16;5095:3;5089:4;5086:13;5082:36;5076:2;5066:8;5063:16;5058:2;5052:4;5049:12;5045:35;5042:77;5039:159;;;-1:-1:-1;5151:19:43;;;5183:5;;5039:159;5230:34;5255:8;5249:4;5230:34;:::i;:::-;5360:6;5292:66;5288:79;5279:7;5276:92;5273:118;;;5371:18;;:::i;:::-;5409:20;;4569:866;-1:-1:-1;;;4569:866:43:o;5440:140::-;5498:5;5527:47;5568:4;5558:8;5554:19;5548:4;5527:47;:::i;5585:168::-;5658:9;;;5689;;5706:15;;;5700:22;;5686:37;5676:71;;5727:18;;:::i;6377:125::-;6442:9;;;6463:10;;;6460:36;;;6476:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "24982": [
        {
          "start": 340,
          "length": 32
        },
        {
          "start": 1080,
          "length": 32
        }
      ],
      "26852": [
        {
          "start": 1815,
          "length": 32
        }
      ],
      "26854": [
        {
          "start": 1773,
          "length": 32
        }
      ],
      "26856": [
        {
          "start": 1731,
          "length": 32
        }
      ],
      "26858": [
        {
          "start": 1898,
          "length": 32
        }
      ],
      "26860": [
        {
          "start": 1935,
          "length": 32
        }
      ],
      "26862": [
        {
          "start": 1856,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC20Permit__Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20__Expired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20__InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC20__StringTooLong\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Signable__InvalidSignature\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account_\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-nonces}. /**See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tests/ERC20Mock.t.sol\":\"ERC20Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":oz-custom/=node_modules/oz-custom/\"]},\"sources\":{\"contracts/tests/ERC20Mock.t.sol\":{\"keccak256\":\"0xdf09ff8148eee3671840e17e1cc9c623a0ea96cdd3e74efe12fc9bd5e4479432\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91424286063bb72d4329dd17fae74be17934e2ccf70446c538574990ca3b6d3d\",\"dweb:/ipfs/QmYbwTG5xbhPgCYeyKKDy3DhxCRxcepURwMqk5QKMxV65j\"]},\"node_modules/oz-custom/contracts/internal/Signable.sol\":{\"keccak256\":\"0x1317185c89e55babc05cfbe85f26e6d6547ad9ff3c6104eb6ebddc152c816e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81d00c3b87e28b0c936094fd838e360fcf4c13a989f57252ed41d27d0766479d\",\"dweb:/ipfs/QmbTYd6SCwA5Yb6ZoFgZjUYdnNveVPp8RaBZiw5vAPR6YW\"]},\"node_modules/oz-custom/contracts/internal/interfaces/ISignable.sol\":{\"keccak256\":\"0xa41f1487bcee7c24e7fde80c0d5f3babd3eac3ac0a515b8f85947b6dd4ac9e5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24b3e6bc7620b1907c48c80de128f0543a203750c086de53181f395684003cc1\",\"dweb:/ipfs/QmRvGBD3FZXCss2hqXJafehtH3MesBTagmVFTmstDAi3US\"]},\"node_modules/oz-custom/contracts/libraries/Bytes32Address.sol\":{\"keccak256\":\"0x922291d1536c966dfc4f061135ed923aa024b30dc2f1745dd06f0d0f605fea33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a03e29d32d65cda5a3d188b52937d839357e67009e3d8b60388fe8633bc44f\",\"dweb:/ipfs/QmUsQ5dvRzn6jM87iFhNQmHjonp1V1HLSvHusZ4HSi4s5G\"]},\"node_modules/oz-custom/contracts/oz/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x335a54eadd98d5cd3658deceb13da6e233c9769d66ab06dff4189a6a52e68ae5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b27d9d6f4f0b78f0492c70300811ead0cf3b80527e46ca289dfbb62aa4808191\",\"dweb:/ipfs/QmP5cdXnVYKvYAYECtz8adaZmeHpQeVy3swMStppaF78NQ\"]},\"node_modules/oz-custom/contracts/oz/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x091d76c41164a51cb1334cc58f542859efabb22ada153be8e6f66fb94f740a1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63ddd30b826289c0d3323e4f7a59c6d11fc4005077cc5fba85d2ef0103e3aa3\",\"dweb:/ipfs/QmWX4pfco8iqgmMozgZ7C28pRRkJ4CeWnmSCQ1X7FPc2uy\"]},\"node_modules/oz-custom/contracts/oz/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xccbe180615b481f4d374edeb76453597e483ad7dea40d2e33e9c4b72d2631752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a764922c8d9c6b5868841cd5f7177e6c1a20ed178aa2fbd75d89ab5a6e3e700b\",\"dweb:/ipfs/QmVtSv9XjD1gjybF851TG8cDMbLw9XqQGSbLmTRggLgURb\"]},\"node_modules/oz-custom/contracts/oz/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x34105f424efc42408e888dea69590a54b6e58002c97901011bca87fe2489eee7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8b832080b30bbb476c96a237051c25aa508cb6fcd623415df87d9f83226fbfe\",\"dweb:/ipfs/QmUqnoPTGMf9tWRGrPESEoh7kgWJcAFyfNWMFEVm5iggwZ\"]},\"node_modules/oz-custom/contracts/oz/utils/Context.sol\":{\"keccak256\":\"0x9a926fa07b0ddd374404ea567c3ec13ba0239559e9343366d8de352f475a7f2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://453d160e042dfa2d1c5b664cf4b9ccf32a4d021644caa1c561c6fe7f5cb2cd47\",\"dweb:/ipfs/QmSVHa6uefNhtDkfQQdbKxFNNm7fVQ72eDeRPBmTsFSbyH\"]},\"node_modules/oz-custom/contracts/oz/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xf2c24a44f3aeaf307a2201deb845f1a21d2b38633ec43db402e9f4cea3023841\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b0a6e8aaf6a622ad2bf7b82be7c3d5516b834c967dbb33133b7ca4aa2d7f7b2\",\"dweb:/ipfs/QmPca59AxxZS5Zypyd6quyFosi6q1sVvXM8zjv6NcK5tmK\"]},\"node_modules/oz-custom/contracts/oz/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0xf618b3f3907c805a1fa3870c37333f0ce19ba64f832ab52c5ca18e619e68ea0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2b6fea8e4df71c57f738d9ac7cd3cbf1bcde11fcee97245115dd2925a68ef8d\",\"dweb:/ipfs/Qme5Ki86iQagJdKbtaNu8cgPzpBJgxKFox2JwC2gB8nRhe\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20Permit__Expired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20__Expired"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20__InvalidSignature"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ERC20__StringTooLong"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Signable__InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-nonces}. /**See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by `account`."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":oz-custom/=node_modules/oz-custom/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/tests/ERC20Mock.t.sol": "ERC20Test"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/tests/ERC20Mock.t.sol": {
        "keccak256": "0xdf09ff8148eee3671840e17e1cc9c623a0ea96cdd3e74efe12fc9bd5e4479432",
        "urls": [
          "bzz-raw://91424286063bb72d4329dd17fae74be17934e2ccf70446c538574990ca3b6d3d",
          "dweb:/ipfs/QmYbwTG5xbhPgCYeyKKDy3DhxCRxcepURwMqk5QKMxV65j"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/internal/Signable.sol": {
        "keccak256": "0x1317185c89e55babc05cfbe85f26e6d6547ad9ff3c6104eb6ebddc152c816e68",
        "urls": [
          "bzz-raw://81d00c3b87e28b0c936094fd838e360fcf4c13a989f57252ed41d27d0766479d",
          "dweb:/ipfs/QmbTYd6SCwA5Yb6ZoFgZjUYdnNveVPp8RaBZiw5vAPR6YW"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/internal/interfaces/ISignable.sol": {
        "keccak256": "0xa41f1487bcee7c24e7fde80c0d5f3babd3eac3ac0a515b8f85947b6dd4ac9e5d",
        "urls": [
          "bzz-raw://24b3e6bc7620b1907c48c80de128f0543a203750c086de53181f395684003cc1",
          "dweb:/ipfs/QmRvGBD3FZXCss2hqXJafehtH3MesBTagmVFTmstDAi3US"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/libraries/Bytes32Address.sol": {
        "keccak256": "0x922291d1536c966dfc4f061135ed923aa024b30dc2f1745dd06f0d0f605fea33",
        "urls": [
          "bzz-raw://39a03e29d32d65cda5a3d188b52937d839357e67009e3d8b60388fe8633bc44f",
          "dweb:/ipfs/QmUsQ5dvRzn6jM87iFhNQmHjonp1V1HLSvHusZ4HSi4s5G"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/oz/token/ERC20/ERC20.sol": {
        "keccak256": "0x335a54eadd98d5cd3658deceb13da6e233c9769d66ab06dff4189a6a52e68ae5",
        "urls": [
          "bzz-raw://b27d9d6f4f0b78f0492c70300811ead0cf3b80527e46ca289dfbb62aa4808191",
          "dweb:/ipfs/QmP5cdXnVYKvYAYECtz8adaZmeHpQeVy3swMStppaF78NQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "node_modules/oz-custom/contracts/oz/token/ERC20/IERC20.sol": {
        "keccak256": "0x091d76c41164a51cb1334cc58f542859efabb22ada153be8e6f66fb94f740a1e",
        "urls": [
          "bzz-raw://b63ddd30b826289c0d3323e4f7a59c6d11fc4005077cc5fba85d2ef0103e3aa3",
          "dweb:/ipfs/QmWX4pfco8iqgmMozgZ7C28pRRkJ4CeWnmSCQ1X7FPc2uy"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/oz/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xccbe180615b481f4d374edeb76453597e483ad7dea40d2e33e9c4b72d2631752",
        "urls": [
          "bzz-raw://a764922c8d9c6b5868841cd5f7177e6c1a20ed178aa2fbd75d89ab5a6e3e700b",
          "dweb:/ipfs/QmVtSv9XjD1gjybF851TG8cDMbLw9XqQGSbLmTRggLgURb"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/oz/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x34105f424efc42408e888dea69590a54b6e58002c97901011bca87fe2489eee7",
        "urls": [
          "bzz-raw://f8b832080b30bbb476c96a237051c25aa508cb6fcd623415df87d9f83226fbfe",
          "dweb:/ipfs/QmUqnoPTGMf9tWRGrPESEoh7kgWJcAFyfNWMFEVm5iggwZ"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/oz/utils/Context.sol": {
        "keccak256": "0x9a926fa07b0ddd374404ea567c3ec13ba0239559e9343366d8de352f475a7f2a",
        "urls": [
          "bzz-raw://453d160e042dfa2d1c5b664cf4b9ccf32a4d021644caa1c561c6fe7f5cb2cd47",
          "dweb:/ipfs/QmSVHa6uefNhtDkfQQdbKxFNNm7fVQ72eDeRPBmTsFSbyH"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/oz/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xf2c24a44f3aeaf307a2201deb845f1a21d2b38633ec43db402e9f4cea3023841",
        "urls": [
          "bzz-raw://3b0a6e8aaf6a622ad2bf7b82be7c3d5516b834c967dbb33133b7ca4aa2d7f7b2",
          "dweb:/ipfs/QmPca59AxxZS5Zypyd6quyFosi6q1sVvXM8zjv6NcK5tmK"
        ],
        "license": "MIT"
      },
      "node_modules/oz-custom/contracts/oz/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0xf618b3f3907c805a1fa3870c37333f0ce19ba64f832ab52c5ca18e619e68ea0d",
        "urls": [
          "bzz-raw://e2b6fea8e4df71c57f738d9ac7cd3cbf1bcde11fcee97245115dd2925a68ef8d",
          "dweb:/ipfs/Qme5Ki86iQagJdKbtaNu8cgPzpBJgxKFox2JwC2gB8nRhe"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/tests/ERC20Mock.t.sol",
    "id": 346,
    "exportedSymbols": {
      "Bytes32Address": [
        24318
      ],
      "Context": [
        26680
      ],
      "ECDSA": [
        26846
      ],
      "EIP712": [
        26999
      ],
      "ERC20": [
        25377
      ],
      "ERC20Permit": [
        25584
      ],
      "ERC20Test": [
        345
      ],
      "IERC20": [
        25461
      ],
      "IERC20Permit": [
        25622
      ],
      "ISignable": [
        24261
      ],
      "Signable": [
        24244
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:350:4",
    "nodes": [
      {
        "id": 312,
        "nodeType": "PragmaDirective",
        "src": "32:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 313,
        "nodeType": "ImportDirective",
        "src": "57:77:4",
        "nodes": [],
        "absolutePath": "node_modules/oz-custom/contracts/oz/token/ERC20/extensions/draft-ERC20Permit.sol",
        "file": "oz-custom/contracts/oz/token/ERC20/extensions/draft-ERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 346,
        "sourceUnit": 25585,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 345,
        "nodeType": "ContractDefinition",
        "src": "136:245:4",
        "nodes": [
          {
            "id": 327,
            "nodeType": "FunctionDefinition",
            "src": "176:97:4",
            "nodes": [],
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "271:2:4",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5061796d656e74546f6b656e",
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "204:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2a0042aa5927659ce92b18c349f72b0bd56e59c0810b5cd93318f44ab21fef5",
                      "typeString": "literal_string \"PaymentToken\""
                    },
                    "value": "PaymentToken"
                  },
                  {
                    "hexValue": "504d54",
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "220:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0d7e2e6d931d17c7cd37fab2b0574b4da6412441de289b64253b319a38c709b0",
                      "typeString": "literal_string \"PMT\""
                    },
                    "value": "PMT"
                  },
                  {
                    "hexValue": "3138",
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "227:2:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 321,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 317,
                  "name": "ERC20",
                  "nameLocations": [
                    "198:5:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25377,
                  "src": "198:5:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "198:32:4"
              },
              {
                "arguments": [
                  {
                    "hexValue": "5061796d656e74546f6b656e",
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "251:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b2a0042aa5927659ce92b18c349f72b0bd56e59c0810b5cd93318f44ab21fef5",
                      "typeString": "literal_string \"PaymentToken\""
                    },
                    "value": "PaymentToken"
                  }
                ],
                "id": 324,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 322,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "239:11:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25584,
                  "src": "239:11:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "239:27:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "187:2:4"
            },
            "returnParameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "271:0:4"
            },
            "scope": 345,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 344,
            "nodeType": "FunctionDefinition",
            "src": "279:100:4",
            "nodes": [],
            "body": {
              "id": 343,
              "nodeType": "Block",
              "src": "330:49:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 329,
                        "src": "346:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 336,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 331,
                          "src": "350:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "359:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 338,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24982,
                            "src": "363:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "359:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "350:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 334,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25328,
                      "src": "340:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "340:32:4"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "288:4:4",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "301:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "293:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 331,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "313:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 344,
                  "src": "305:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 330,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:28:4"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:4"
            },
            "scope": 345,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 314,
              "name": "ERC20Permit",
              "nameLocations": [
                "158:11:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25584,
              "src": "158:11:4"
            },
            "id": 315,
            "nodeType": "InheritanceSpecifier",
            "src": "158:11:4"
          }
        ],
        "canonicalName": "ERC20Test",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          345,
          25584,
          24244,
          24261,
          26999,
          25622,
          25377,
          25461,
          26680
        ],
        "name": "ERC20Test",
        "nameLocation": "145:9:4",
        "scope": 346,
        "usedErrors": [
          24248,
          25382,
          25384,
          25386,
          25589
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 4
}